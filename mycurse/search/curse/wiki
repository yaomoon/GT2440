## install

Firstly, install dependencies:

    sudo apt-get install libncurses5 libncurses5-dev

now compile:

    gcc -o xxx xxx.c -lncurses

finally copy the binary `xxx` to once of the $PATH places

   cp xxx ~/bin/

NOTE: the $HOME/bin is a nice place to install your own made app, since no `sudo` is needed
and on ubuntu, you don't need to modify $PATH to make it work, it is just one of the defaults.

## dev note

If you've configured your ncurses with --enable-sigwinch, then you can go the 
easy way out, and just watch the characters that you get from getch() for a 
KEY_RESIZE. When ncurses handles the SIGWINCH signal, it pushes a KEY_RESIZE 
back onto the queue that getch() uses, so that the next call to getch() will 
return that value. However, not everyone's ncurses library has been configured 
with that switch, so relying on that behavior is not portable.

## ncurses & Unicode

The normal ncurses libraries support 8-bit characters. The ncurses library can
also be configured (--enable-widec) to support wide-characters (for instance
Unicode and the UTF-8 encoding). The corresponding wide-character ncursesw
libraries are source-compatible with the normal applications. That is,
applications must be compiled and linked against the ncursesw library.

The ncurses 5.3 release provides UTF-8 support. The special cases of Linux
console and screen were addressed in development patches completed at the end
of 2002. 

Note: the resource above from http://invisible-island.net/ncurses/ncurses.faq.html

## articles about Unicode 

http://www.cprogramming.com/tutorial/unicode.html

http://www.cl.cam.ac.uk/~mgk25/unicode.html

https://help.ubuntu.com/community/Locale

http://developers.sun.com/dev/gadc/technicalpublications/articles/utf8.html

http://www.tbray.org/ongoing/When/200x/2003/04/26/UTF
